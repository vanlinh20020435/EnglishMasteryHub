plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.emh'
version = '1.0.0'

java.sourceCompatibility = '17'

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'local'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation 'org.testng:testng:7.1.0'
    runtimeOnly('com.mysql:mysql-connector-j')
    implementation('io.github.wimdeblauwe:error-handling-spring-boot-starter:4.2.0')
    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0')
    implementation 'org.modelmapper:modelmapper:3.1.0'
    implementation 'io.jsonwebtoken:jjwt:0.12.5'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-exec:1.3'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
//    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"

    developmentOnly('org.springframework.boot:spring-boot-devtools')
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
}

tasks.withType(Test) {
    useJUnitPlatform()
}

task copyJarToBin(type: Copy) {
    group 'build'
    dependsOn jar
    from 'build/libs/'
    into "lib/emh"
}

task copyJarToBinClean {
    group 'build'
    dependsOn clean
    dependsOn copyJarToBin
}

task copyDependencies(type: Copy) {
    from(sourceSets.main.runtimeClasspath) { include '*.jar' }
    into 'lib/springboot'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
